diff --git a/scripts/bootstrap/bootstrap.sh b/scripts/bootstrap/bootstrap.sh
index c50afc2..af980f2 100755
--- a/scripts/bootstrap/bootstrap.sh
+++ b/scripts/bootstrap/bootstrap.sh
@@ -47,7 +47,7 @@ else
         --host_java_toolchain=//src/java_tools/buildjar:bootstrap_toolchain \
         --spawn_strategy=standalone \
         --nojava_header_compilation \
-        --strategy=Javac=worker --worker_quit_after_build --ignore_unsupported_sandboxing \
+        --strategy=Javac=standalone --ignore_unsupported_sandboxing \
         --compilation_mode=opt \
         ${EXTRA_BAZEL_ARGS:-}"
 fi
@@ -101,7 +101,7 @@ function bootstrap_test() {
   local BAZEL_BIN=$1
   local BAZEL_SUM=$2
   local BAZEL_TARGET=${3:-src:bazel}
-  local STRATEGY="--strategy=Javac=worker --worker_quit_after_build"
+  local STRATEGY="--strategy=Javac=standalone"
   if [ "${JAVA_VERSION}" = "1.7" ]; then
     STRATEGY=
   fi
diff --git a/scripts/bootstrap/buildenv.sh b/scripts/bootstrap/buildenv.sh
index 88d7e4f..f89b2fb 100755
--- a/scripts/bootstrap/buildenv.sh
+++ b/scripts/bootstrap/buildenv.sh
@@ -71,6 +71,10 @@ if [ "${MACHINE_TYPE}" = 'ppc64' -o "${MACHINE_TYPE}" = 'ppc64le' ]; then
   MACHINE_IS_64BIT='yes'
 fi
 
+if [ "${MACHINE_TYPE}" = 'mips64' -o "${MACHINE_TYPE}" = 'mips64el' ]; then
+  MACHINE_IS_64BIT='yes'
+fi
+
 PATHSEP=":"
 case "${PLATFORM}" in
 linux)
@@ -166,7 +170,8 @@ function tempdir() {
   local DIR="$(mktemp -d "${tmp%%/}/bazel_XXXXXXXX")"
   mkdir -p "${DIR}"
   local DIRBASE=$(basename "${DIR}")
-  eval "cleanup_tempdir_${DIRBASE}() { rm -rf '${DIR}' >&/dev/null || true ; }"
+#  eval "cleanup_tempdir_${DIRBASE}() { rm -rf '${DIR}' >&/dev/null || true ; }"
+  eval "cleanup_tempdir_${DIRBASE}() { echo '${IR}' || true ; }"
   atexit cleanup_tempdir_${DIRBASE}
   NEW_TMPDIR="${DIR}"
 }
diff --git a/src/java_tools/buildjar/BUILD b/src/java_tools/buildjar/BUILD
index 87f74b2..69fcb49 100755
--- a/src/java_tools/buildjar/BUILD
+++ b/src/java_tools/buildjar/BUILD
@@ -71,8 +71,8 @@ java_toolchain(
     javabuilder = ["bootstrap_deploy.jar"],
     javac = ["//third_party/java/jdk/langtools:javac_jar"],
     jvm_opts = [
-        "-XX:+TieredCompilation",
-        "-XX:TieredStopAtLevel=1",
+#        "-XX:+TieredCompilation",
+#        "-XX:TieredStopAtLevel=1",
     ],
     singlejar = ["//src/java_tools/singlejar:bootstrap_deploy.jar"],
     source_version = "8",
@@ -90,8 +90,8 @@ java_toolchain(
     javabuilder = [":bootstrap_VanillaJavaBuilder_deploy.jar"],
     javac = ["//third_party/java/jdk/langtools:javac7_jar"],
     jvm_opts = [
-        "-XX:+TieredCompilation",
-        "-XX:TieredStopAtLevel=1",
+#        "-XX:+TieredCompilation",
+#        "-XX:TieredStopAtLevel=1",
     ],
     singlejar = ["//src/java_tools/singlejar:bootstrap_deploy.jar"],
     source_version = "7",
diff --git a/src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java b/src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java
index 3273a6d..d7a6485 100755
--- a/src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java
+++ b/src/main/java/com/google/devtools/build/lib/analysis/config/BuildConfiguration.java
@@ -443,6 +443,8 @@ public final class BuildConfiguration {
                 return "k8";
               case PPC:
                 return "ppc";
+	      case MIPS64:
+                return "mips64";
               case ARM:
                 return "arm";
               case S390X:
diff --git a/src/main/java/com/google/devtools/build/lib/util/CPU.java b/src/main/java/com/google/devtools/build/lib/util/CPU.java
index e210eb5..ae501cd 100755
--- a/src/main/java/com/google/devtools/build/lib/util/CPU.java
+++ b/src/main/java/com/google/devtools/build/lib/util/CPU.java
@@ -24,6 +24,7 @@ public enum CPU {
   X86_32("x86_32", ImmutableSet.of("i386", "i486", "i586", "i686", "i786", "x86")),
   X86_64("x86_64", ImmutableSet.of("amd64", "x86_64", "x64")),
   PPC("ppc", ImmutableSet.of("ppc", "ppc64", "ppc64le")),
+  MIPS64("mips64", ImmutableSet.of("mips64el", "mips64")),
   ARM("arm", ImmutableSet.of("aarch64", "arm", "armv7l")),
   S390X("s390x", ImmutableSet.of("s390x", "s390")),
   UNKNOWN("unknown", ImmutableSet.<String>of());
diff --git a/src/test/java/com/google/devtools/build/lib/analysis/mock/MOCK_CROSSTOOL b/src/test/java/com/google/devtools/build/lib/analysis/mock/MOCK_CROSSTOOL
index 1d9789e..995ff07 100755
--- a/src/test/java/com/google/devtools/build/lib/analysis/mock/MOCK_CROSSTOOL
+++ b/src/test/java/com/google/devtools/build/lib/analysis/mock/MOCK_CROSSTOOL
@@ -32,6 +32,10 @@ default_toolchain {
   cpu: "ppc"
   toolchain_identifier: "local_linux"
 }
+default_toolchain {
+  cpu: "mips64"
+  toolchain_identifier: "local_linux"
+}
 
 toolchain {
   abi_version: "local"
@@ -47,7 +51,7 @@ toolchain {
   supports_normalizing_ar: false
   supports_start_end_lib: false
   target_libc: "local"
-  target_cpu: "ppc"
+  target_cpu: "mips64|ppc"
   target_system_name: "local"
   toolchain_identifier: "local_linux"
 
diff --git a/src/test/java/com/google/devtools/build/lib/packages/util/BazelMockCcSupport.java b/src/test/java/com/google/devtools/build/lib/packages/util/BazelMockCcSupport.java
index fdb8792..c1cc680 100755
--- a/src/test/java/com/google/devtools/build/lib/packages/util/BazelMockCcSupport.java
+++ b/src/test/java/com/google/devtools/build/lib/packages/util/BazelMockCcSupport.java
@@ -40,7 +40,7 @@ public final class BazelMockCcSupport extends MockCcSupport {
   private BazelMockCcSupport() {}
 
   private static final ImmutableList<String> CROSSTOOL_ARCHS =
-      ImmutableList.of("piii", "k8", "armeabi-v7a", "ppc");
+      ImmutableList.of("piii", "k8", "armeabi-v7a", "ppc", "mips64");
 
   protected static void createBasePackage(MockToolsConfig config) throws IOException {
     config.create(
@@ -91,6 +91,7 @@ public final class BazelMockCcSupport extends MockCcSupport {
         "      'armeabi-v7a|compiler': ':cc-compiler-armeabi-v7a',",
         "      'x64_windows|windows_msys64': ':cc-compiler-x64_windows',",
         "      'ppc|compiler': ':cc-compiler-ppc',",
+	"      'mips64|compiler': ':cc-compiler-mips64',",
         "    })",
         "cc_toolchain(name = 'cc-compiler-k8', all_files = ':empty', compiler_files = ':empty',",
         "    cpu = 'local', dwp_files = ':empty', dynamic_runtime_libs = [':empty'], ",
@@ -104,6 +105,12 @@ public final class BazelMockCcSupport extends MockCcSupport {
         "    module_map = 'crosstool.cppmap', supports_header_parsing = 1,",
         "    objcopy_files = ':empty', static_runtime_libs = [':empty'], strip_files = ':empty',",
         ")",
+	"cc_toolchain(name = 'cc-compiler-mips64', all_files = ':empty', compiler_files = ':empty',",
+        "    cpu = 'mips64', dwp_files = ':empty', dynamic_runtime_libs = [':empty'], ",
+        "    linker_files = ':empty',",
+        "    module_map = 'crosstool.cppmap', supports_header_parsing = 1,",
+        "    objcopy_files = ':empty', static_runtime_libs = [':empty'], strip_files = ':empty',",
+        ")",
         "cc_toolchain(name = 'cc-compiler-piii', all_files = ':empty', compiler_files = ':empty',",
         "    cpu = 'local', dwp_files = ':empty', dynamic_runtime_libs = [':empty'], ",
         "    linker_files = ':empty',",
diff --git a/src/test/java/com/google/devtools/build/lib/rules/cpp/CcToolchainSuiteTest.java b/src/test/java/com/google/devtools/build/lib/rules/cpp/CcToolchainSuiteTest.java
index 71d0ab3..1083d2d 100755
--- a/src/test/java/com/google/devtools/build/lib/rules/cpp/CcToolchainSuiteTest.java
+++ b/src/test/java/com/google/devtools/build/lib/rules/cpp/CcToolchainSuiteTest.java
@@ -41,6 +41,7 @@ public class CcToolchainSuiteTest extends BuildViewTestCase {
         "       'darwin|darwin-compiler': ':darwin-toolchain',",
         "       'x64_windows|windows-compiler': ':windows-toolchain',",
         "       'ppc|compiler': ':local_linux',",
+	"       'mips64|compiler': ':local_linux',",
         "    },",
         "    proto = \"\"\"",
         "major_version: 'v1'",
@@ -62,6 +63,10 @@ public class CcToolchainSuiteTest extends BuildViewTestCase {
         "  cpu: 'ppc'",
         "  toolchain_identifier: 'local_linux'",
         "}",
+	"default_toolchain {",
+        "  cpu: 'mips64'",
+        "  toolchain_identifier: 'local_linux'",
+        "}",
         "toolchain {",
         "  compiler: 'k8-compiler'",
         "  target_cpu: 'k8'",
@@ -135,7 +140,7 @@ public class CcToolchainSuiteTest extends BuildViewTestCase {
         "  compiler: 'compiler'",
         "  host_system_name: 'local'",
         "  target_libc: 'local'",
-        "  target_cpu: 'ppc'",
+        "  target_cpu: 'mips64|ppc'",
         "  target_system_name: 'local'",
         "  toolchain_identifier: 'local_linux'",
         "  tool_path { name: 'ar' path: '/usr/bin/ar' }",
diff --git a/src/test/java/com/google/devtools/build/lib/rules/cpp/CrosstoolConfigurationHelper.java b/src/test/java/com/google/devtools/build/lib/rules/cpp/CrosstoolConfigurationHelper.java
index ada901e..36a08bd 100755
--- a/src/test/java/com/google/devtools/build/lib/rules/cpp/CrosstoolConfigurationHelper.java
+++ b/src/test/java/com/google/devtools/build/lib/rules/cpp/CrosstoolConfigurationHelper.java
@@ -67,6 +67,8 @@ public class CrosstoolConfigurationHelper {
           return "k8";
         case PPC:
           return "ppc";
+	case MIPS64:
+          return "mips64";
         case ARM:
           return "arm";
         case S390X:
diff --git a/third_party/BUILD b/third_party/BUILD
index 7ce8c7a..fcec8bd 100755
--- a/third_party/BUILD
+++ b/third_party/BUILD
@@ -634,3 +634,8 @@ config_setting(
     name = "ppc",
     values = {"host_cpu": "ppc"},
 )
+
+config_setting(
+    name = "mips64",
+    values = {"host_cpu": "mips64"},
+)
diff --git a/tools/cpp/BUILD b/tools/cpp/BUILD
index 6dd2a60..5165ac3 100755
--- a/tools/cpp/BUILD
+++ b/tools/cpp/BUILD
@@ -39,6 +39,7 @@ cc_toolchain_suite(
         "x64_windows|compiler": ":cc-compiler-x64_windows",
         "x64_windows_msvc|compiler": ":cc-compiler-x64_windows_msvc",
         "ppc|compiler": ":cc-compiler-ppc",
+	"mips64|compiler": ":cc-compiler-mips64",
         "ios_x86_64|compiler": ":cc-compiler-ios_x86_64",
     },
 )
@@ -72,6 +73,20 @@ cc_toolchain(
 )
 
 cc_toolchain(
+    name = "cc-compiler-mips64",
+    all_files = ":empty",
+    compiler_files = ":empty",
+    cpu = "mips64",
+    dwp_files = ":empty",
+    dynamic_runtime_libs = [":empty"],
+    linker_files = ":empty",
+    objcopy_files = ":empty",
+    static_runtime_libs = [":empty"],
+    strip_files = ":empty",
+    supports_param_files = 1,
+)
+
+cc_toolchain(
     name = "cc-compiler-armeabi-v7a",
     all_files = ":empty",
     compiler_files = ":empty",
diff --git a/tools/cpp/CROSSTOOL b/tools/cpp/CROSSTOOL
index bb22006..e8e0b8c 100755
--- a/tools/cpp/CROSSTOOL
+++ b/tools/cpp/CROSSTOOL
@@ -45,6 +45,11 @@ default_toolchain {
 }
 
 default_toolchain {
+  cpu: "mips64"
+  toolchain_identifier: "local_linux"
+}
+
+default_toolchain {
   cpu: "ios_x86_64"
   toolchain_identifier: "ios_x86_64"
 }
diff --git a/tools/cpp/cc_configure.bzl b/tools/cpp/cc_configure.bzl
index e4427cd..b868dca 100755
--- a/tools/cpp/cc_configure.bzl
+++ b/tools/cpp/cc_configure.bzl
@@ -163,6 +163,8 @@ def _get_cpu_value(repository_ctx):
   result = repository_ctx.execute(["uname", "-m"])
   if result.stdout.strip() in ["power", "ppc64le", "ppc"]:
     return "ppc"
+  if result.stdout.strip() in ["mips64el", "mips64"]:
+    return "mips64"
   if result.stdout.strip() in ["arm", "armv7l", "aarch64"]:
     return "arm"
   return "k8" if result.stdout.strip() in ["amd64", "x86_64", "x64"] else "piii"
diff --git a/tools/jdk/BUILD b/tools/jdk/BUILD
index 005ae91..a0b5d93 100755
--- a/tools/jdk/BUILD
+++ b/tools/jdk/BUILD
@@ -146,8 +146,8 @@ java_toolchain(
     javac = ["//third_party/java/jdk/langtools:javac_jar"],
     javac_supports_workers = 1,
     jvm_opts = [
-        "-XX:+TieredCompilation",
-        "-XX:TieredStopAtLevel=1",
+#        "-XX:+TieredCompilation",
+#        "-XX:TieredStopAtLevel=1",
     ],
     misc = [
         "-XDskipDuplicateBridges=true",
diff --git a/tools/platforms/platforms.BUILD b/tools/platforms/platforms.BUILD
index dd12d66..6bc0f96 100755
--- a/tools/platforms/platforms.BUILD
+++ b/tools/platforms/platforms.BUILD
@@ -25,6 +25,11 @@ constraint_value(
 )
 
 constraint_value(
+    name = "mips64",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
     name = "arm",
     constraint_setting = ":cpu",
 )
